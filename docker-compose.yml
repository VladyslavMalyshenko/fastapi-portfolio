version: '3.8'

services:
  db:
    image: postgres:15
    restart: always
    volumes:
      - psql_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_PORT: ${DB_PORT}

  app_backend:
    build:
      context: ./backend/
      dockerfile: ./Dockerfile
    restart: always
    volumes:
      - ./backend:/portfolio/backend
    ports:
      - '8000:8000'
    env_file:
      - .env
    depends_on:
      - db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_PORT: ${DB_PORT}

  rabbitmq:
    image: rabbitmq:3.12-management
    restart: always
    hostname: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'

  celery:
    build:
      context: ./backend/
      dockerfile: ./Dockerfile
    env_file:
      - .env
    restart: always
    entrypoint: celery
    command: -A src.settings worker -B --loglevel=info
    volumes:
      - ./backend:/portfolio/backend
    depends_on:
      - rabbitmq
      - app_backend
      - db

  flower:
    build:
      context: ./backend/
      dockerfile: ./Dockerfile
    env_file:
      - .env
    restart: always
    command: [ '/portfolio/celery.sh', 'flower' ]
    depends_on:
      - rabbitmq
      - db
      - app_backend
    volumes:
      - ./backend:/portfolio/backend
    ports:
      - "8888:5555"

  app_frontend:
    build:
      context: ./frontend/
      dockerfile: ./Dockerfile
    volumes:
      - ./frontend:/portfolio/frontend
      - node_modules:/portfolio/frontend/node_modules/
    restart: always
    ports:
      - "3000:3000"

volumes:
  psql_data:
  node_modules: